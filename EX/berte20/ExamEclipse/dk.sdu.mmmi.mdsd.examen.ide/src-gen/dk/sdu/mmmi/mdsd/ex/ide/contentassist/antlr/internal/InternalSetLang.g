/*
 * generated by Xtext 2.33.0
 */
grammar InternalSetLang;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package dk.sdu.mmmi.mdsd.ex.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dk.sdu.mmmi.mdsd.ex.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import dk.sdu.mmmi.mdsd.ex.services.SetLangGrammarAccess;

}
@parser::members {
	private SetLangGrammarAccess grammarAccess;

	public void setGrammarAccess(SetLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalDef
entryRuleExternalDef
:
{ before(grammarAccess.getExternalDefRule()); }
	 ruleExternalDef
{ after(grammarAccess.getExternalDefRule()); } 
	 EOF 
;

// Rule ExternalDef
ruleExternalDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalDefAccess().getGroup()); }
		(rule__ExternalDef__Group__0)
		{ after(grammarAccess.getExternalDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRecord
entryRuleRecord
:
{ before(grammarAccess.getRecordRule()); }
	 ruleRecord
{ after(grammarAccess.getRecordRule()); } 
	 EOF 
;

// Rule Record
ruleRecord 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecordAccess().getGroup()); }
		(rule__Record__Group__0)
		{ after(grammarAccess.getRecordAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMember
entryRuleMember
:
{ before(grammarAccess.getMemberRule()); }
	 ruleMember
{ after(grammarAccess.getMemberRule()); } 
	 EOF 
;

// Rule Member
ruleMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMemberAccess().getGroup()); }
		(rule__Member__Group__0)
		{ after(grammarAccess.getMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompute
entryRuleCompute
:
{ before(grammarAccess.getComputeRule()); }
	 ruleCompute
{ after(grammarAccess.getComputeRule()); } 
	 EOF 
;

// Rule Compute
ruleCompute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComputeAccess().getGroup()); }
		(rule__Compute__Group__0)
		{ after(grammarAccess.getComputeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnionIntersection
entryRuleUnionIntersection
:
{ before(grammarAccess.getUnionIntersectionRule()); }
	 ruleUnionIntersection
{ after(grammarAccess.getUnionIntersectionRule()); } 
	 EOF 
;

// Rule UnionIntersection
ruleUnionIntersection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnionIntersectionAccess().getGroup()); }
		(rule__UnionIntersection__Group__0)
		{ after(grammarAccess.getUnionIntersectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProduct
entryRuleProduct
:
{ before(grammarAccess.getProductRule()); }
	 ruleProduct
{ after(grammarAccess.getProductRule()); } 
	 EOF 
;

// Rule Product
ruleProduct 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProductAccess().getGroup()); }
		(rule__Product__Group__0)
		{ after(grammarAccess.getProductAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProjectionFilter
entryRuleProjectionFilter
:
{ before(grammarAccess.getProjectionFilterRule()); }
	 ruleProjectionFilter
{ after(grammarAccess.getProjectionFilterRule()); } 
	 EOF 
;

// Rule ProjectionFilter
ruleProjectionFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectionFilterAccess().getGroup()); }
		(rule__ProjectionFilter__Group__0)
		{ after(grammarAccess.getProjectionFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitive
entryRulePrimitive
:
{ before(grammarAccess.getPrimitiveRule()); }
	 rulePrimitive
{ after(grammarAccess.getPrimitiveRule()); } 
	 EOF 
;

// Rule Primitive
rulePrimitive 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveAccess().getAlternatives()); }
		(rule__Primitive__Alternatives)
		{ after(grammarAccess.getPrimitiveAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRef
entryRuleRef
:
{ before(grammarAccess.getRefRule()); }
	 ruleRef
{ after(grammarAccess.getRefRule()); } 
	 EOF 
;

// Rule Ref
ruleRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefAccess().getRefAssignment()); }
		(rule__Ref__RefAssignment)
		{ after(grammarAccess.getRefAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntValue
entryRuleIntValue
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntValueAccess().getGroup()); }
		(rule__IntValue__Group__0)
		{ after(grammarAccess.getIntValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSet
entryRuleSet
:
{ before(grammarAccess.getSetRule()); }
	 ruleSet
{ after(grammarAccess.getSetRule()); } 
	 EOF 
;

// Rule Set
ruleSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetAccess().getGroup()); }
		(rule__Set__Group__0)
		{ after(grammarAccess.getSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTuple
entryRuleTuple
:
{ before(grammarAccess.getTupleRule()); }
	 ruleTuple
{ after(grammarAccess.getTupleRule()); } 
	 EOF 
;

// Rule Tuple
ruleTuple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleAccess().getGroup()); }
		(rule__Tuple__Group__0)
		{ after(grammarAccess.getTupleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParenthesis
entryRuleParenthesis
:
{ before(grammarAccess.getParenthesisRule()); }
	 ruleParenthesis
{ after(grammarAccess.getParenthesisRule()); } 
	 EOF 
;

// Rule Parenthesis
ruleParenthesis 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParenthesisAccess().getGroup()); }
		(rule__Parenthesis__Group__0)
		{ after(grammarAccess.getParenthesisAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRecordAccess
entryRuleRecordAccess
:
{ before(grammarAccess.getRecordAccessRule()); }
	 ruleRecordAccess
{ after(grammarAccess.getRecordAccessRule()); } 
	 EOF 
;

// Rule RecordAccess
ruleRecordAccess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecordAccessAccess().getGroup()); }
		(rule__RecordAccess__Group__0)
		{ after(grammarAccess.getRecordAccessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getIntKeyword_0()); }
		'Int'
		{ after(grammarAccess.getTypeAccess().getIntKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTupleKeyword_1()); }
		'Tuple'
		{ after(grammarAccess.getTypeAccess().getTupleKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_2()); }
		(rule__Type__Group_2__0)
		{ after(grammarAccess.getTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionIntersection__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnionIntersectionAccess().getGroup_1_0_0()); }
		(rule__UnionIntersection__Group_1_0_0__0)
		{ after(grammarAccess.getUnionIntersectionAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnionIntersectionAccess().getGroup_1_0_1()); }
		(rule__UnionIntersection__Group_1_0_1__0)
		{ after(grammarAccess.getUnionIntersectionAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectionFilterAccess().getGroup_1_1_0()); }
		(rule__ProjectionFilter__Group_1_1_0__0)
		{ after(grammarAccess.getProjectionFilterAccess().getGroup_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getProjectionFilterAccess().getGroup_1_1_1()); }
		(rule__ProjectionFilter__Group_1_1_1__0)
		{ after(grammarAccess.getProjectionFilterAccess().getGroup_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getIntValueParserRuleCall_0()); }
		ruleIntValue
		{ after(grammarAccess.getPrimitiveAccess().getIntValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getSetParserRuleCall_1()); }
		ruleSet
		{ after(grammarAccess.getPrimitiveAccess().getSetParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getTupleParserRuleCall_2()); }
		ruleTuple
		{ after(grammarAccess.getPrimitiveAccess().getTupleParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getRecordAccessParserRuleCall_3()); }
		ruleRecordAccess
		{ after(grammarAccess.getPrimitiveAccess().getRecordAccessParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getRefParserRuleCall_4()); }
		ruleRef
		{ after(grammarAccess.getPrimitiveAccess().getRefParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getParenthesisParserRuleCall_5()); }
		ruleParenthesis
		{ after(grammarAccess.getPrimitiveAccess().getParenthesisParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getProgramKeyword_0()); }
	'program'
	{ after(grammarAccess.getProgramAccess().getProgramKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getNameAssignment_1()); }
	(rule__Program__NameAssignment_1)
	{ after(grammarAccess.getProgramAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getExternalDefsAssignment_2()); }
	(rule__Program__ExternalDefsAssignment_2)*
	{ after(grammarAccess.getProgramAccess().getExternalDefsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__3__Impl
	rule__Program__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRecordsAssignment_3()); }
	(rule__Program__RecordsAssignment_3)*
	{ after(grammarAccess.getProgramAccess().getRecordsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getComputesAssignment_4()); }
	(rule__Program__ComputesAssignment_4)*
	{ after(grammarAccess.getProgramAccess().getComputesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDef__Group__0__Impl
	rule__ExternalDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefAccess().getExternalKeyword_0()); }
	'external'
	{ after(grammarAccess.getExternalDefAccess().getExternalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDef__Group__1__Impl
	rule__ExternalDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefAccess().getNameAssignment_1()); }
	(rule__ExternalDef__NameAssignment_1)
	{ after(grammarAccess.getExternalDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDef__Group__2__Impl
	rule__ExternalDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getExternalDefAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDef__Group__3__Impl
	rule__ExternalDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefAccess().getTypeAssignment_3()); }
	(rule__ExternalDef__TypeAssignment_3)
	{ after(grammarAccess.getExternalDefAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getExternalDefAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Record__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group__0__Impl
	rule__Record__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getRecordKeyword_0()); }
	'record'
	{ after(grammarAccess.getRecordAccess().getRecordKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group__1__Impl
	rule__Record__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getNameAssignment_1()); }
	(rule__Record__NameAssignment_1)
	{ after(grammarAccess.getRecordAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group__2__Impl
	rule__Record__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getGroup_2()); }
	(rule__Record__Group_2__0)?
	{ after(grammarAccess.getRecordAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group__3__Impl
	rule__Record__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getGroup_3()); }
	(rule__Record__Group_3__0)?
	{ after(grammarAccess.getRecordAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group__4__Impl
	rule__Record__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getRecordAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group__5__Impl
	rule__Record__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getMembersAssignment_5()); }
	(rule__Record__MembersAssignment_5)*
	{ after(grammarAccess.getRecordAccess().getMembersAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getRecordAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Record__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group_2__0__Impl
	rule__Record__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getRecordAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getParentAssignment_2_1()); }
	(rule__Record__ParentAssignment_2_1)
	{ after(grammarAccess.getRecordAccess().getParentAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Record__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group_3__0__Impl
	rule__Record__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getRecordAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group_3__1__Impl
	rule__Record__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getParametersAssignment_3_1()); }
	(rule__Record__ParametersAssignment_3_1)
	{ after(grammarAccess.getRecordAccess().getParametersAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group_3__2__Impl
	rule__Record__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getGroup_3_2()); }
	(rule__Record__Group_3_2__0)*
	{ after(grammarAccess.getRecordAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getRecordAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Record__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group_3_2__0__Impl
	rule__Record__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getRecordAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccess().getParametersAssignment_3_2_1()); }
	(rule__Record__ParametersAssignment_3_2_1)
	{ after(grammarAccess.getRecordAccess().getParametersAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
	(rule__Parameter__NameAssignment_0)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
	(rule__Parameter__TypeAssignment_2)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getSetKeyword_2_0()); }
	'Set'
	{ after(grammarAccess.getTypeAccess().getSetKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__1__Impl
	rule__Type__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_1()); }
	'('
	{ after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__2__Impl
	rule__Type__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeParserRuleCall_2_2()); }
	ruleType
	{ after(grammarAccess.getTypeAccess().getTypeParserRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Member__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Member__Group__0__Impl
	rule__Member__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberAccess().getNameAssignment_0()); }
	(rule__Member__NameAssignment_0)
	{ after(grammarAccess.getMemberAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Member__Group__1__Impl
	rule__Member__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getMemberAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Member__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberAccess().getExpAssignment_2()); }
	(rule__Member__ExpAssignment_2)
	{ after(grammarAccess.getMemberAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compute__Group__0__Impl
	rule__Compute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputeAccess().getComputeKeyword_0()); }
	'compute'
	{ after(grammarAccess.getComputeAccess().getComputeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compute__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputeAccess().getExpAssignment_1()); }
	(rule__Compute__ExpAssignment_1)
	{ after(grammarAccess.getComputeAccess().getExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnionIntersection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionIntersection__Group__0__Impl
	rule__UnionIntersection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionIntersection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionIntersectionAccess().getProductParserRuleCall_0()); }
	ruleProduct
	{ after(grammarAccess.getUnionIntersectionAccess().getProductParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionIntersection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionIntersection__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionIntersection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionIntersectionAccess().getGroup_1()); }
	(rule__UnionIntersection__Group_1__0)*
	{ after(grammarAccess.getUnionIntersectionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnionIntersection__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionIntersection__Group_1__0__Impl
	rule__UnionIntersection__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionIntersection__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionIntersectionAccess().getAlternatives_1_0()); }
	(rule__UnionIntersection__Alternatives_1_0)
	{ after(grammarAccess.getUnionIntersectionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionIntersection__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionIntersection__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionIntersection__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionIntersectionAccess().getRightAssignment_1_1()); }
	(rule__UnionIntersection__RightAssignment_1_1)
	{ after(grammarAccess.getUnionIntersectionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnionIntersection__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionIntersection__Group_1_0_0__0__Impl
	rule__UnionIntersection__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionIntersection__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionIntersectionAccess().getUnionLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getUnionIntersectionAccess().getUnionLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionIntersection__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionIntersection__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionIntersection__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionIntersectionAccess().getUKeyword_1_0_0_1()); }
	'U'
	{ after(grammarAccess.getUnionIntersectionAccess().getUKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnionIntersection__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionIntersection__Group_1_0_1__0__Impl
	rule__UnionIntersection__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionIntersection__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionIntersectionAccess().getIntersectionLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getUnionIntersectionAccess().getIntersectionLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionIntersection__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnionIntersection__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionIntersection__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnionIntersectionAccess().getAmpersandKeyword_1_0_1_1()); }
	'&'
	{ after(grammarAccess.getUnionIntersectionAccess().getAmpersandKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__0__Impl
	rule__Product__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getProjectionFilterParserRuleCall_0()); }
	ruleProjectionFilter
	{ after(grammarAccess.getProductAccess().getProjectionFilterParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getGroup_1()); }
	(rule__Product__Group_1__0)*
	{ after(grammarAccess.getProductAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group_1__0__Impl
	rule__Product__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getGroup_1_0()); }
	(rule__Product__Group_1_0__0)
	{ after(grammarAccess.getProductAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getRightAssignment_1_1()); }
	(rule__Product__RightAssignment_1_1)
	{ after(grammarAccess.getProductAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group_1_0__0__Impl
	rule__Product__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getProductLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getProductAccess().getProductLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getAsteriskKeyword_1_0_1()); }
	'*'
	{ after(grammarAccess.getProductAccess().getAsteriskKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectionFilter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectionFilter__Group__0__Impl
	rule__ProjectionFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionFilterAccess().getPrimitiveParserRuleCall_0()); }
	rulePrimitive
	{ after(grammarAccess.getProjectionFilterAccess().getPrimitiveParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectionFilter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionFilterAccess().getGroup_1()); }
	(rule__ProjectionFilter__Group_1__0)?
	{ after(grammarAccess.getProjectionFilterAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectionFilter__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectionFilter__Group_1__0__Impl
	rule__ProjectionFilter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionFilterAccess().getNumberSignKeyword_1_0()); }
	'#'
	{ after(grammarAccess.getProjectionFilterAccess().getNumberSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectionFilter__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionFilterAccess().getAlternatives_1_1()); }
	(rule__ProjectionFilter__Alternatives_1_1)
	{ after(grammarAccess.getProjectionFilterAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectionFilter__Group_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectionFilter__Group_1_1_0__0__Impl
	rule__ProjectionFilter__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionFilterAccess().getProjectionOpAction_1_1_0_0()); }
	()
	{ after(grammarAccess.getProjectionFilterAccess().getProjectionOpAction_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectionFilter__Group_1_1_0__1__Impl
	rule__ProjectionFilter__Group_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionFilterAccess().getLessThanSignKeyword_1_1_0_1()); }
	'<'
	{ after(grammarAccess.getProjectionFilterAccess().getLessThanSignKeyword_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectionFilter__Group_1_1_0__2__Impl
	rule__ProjectionFilter__Group_1_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionFilterAccess().getIndicesAssignment_1_1_0_2()); }
	(rule__ProjectionFilter__IndicesAssignment_1_1_0_2)
	{ after(grammarAccess.getProjectionFilterAccess().getIndicesAssignment_1_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectionFilter__Group_1_1_0__3__Impl
	rule__ProjectionFilter__Group_1_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionFilterAccess().getGroup_1_1_0_3()); }
	(rule__ProjectionFilter__Group_1_1_0_3__0)*
	{ after(grammarAccess.getProjectionFilterAccess().getGroup_1_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectionFilter__Group_1_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionFilterAccess().getGreaterThanSignKeyword_1_1_0_4()); }
	'>'
	{ after(grammarAccess.getProjectionFilterAccess().getGreaterThanSignKeyword_1_1_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectionFilter__Group_1_1_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectionFilter__Group_1_1_0_3__0__Impl
	rule__ProjectionFilter__Group_1_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionFilterAccess().getCommaKeyword_1_1_0_3_0()); }
	','
	{ after(grammarAccess.getProjectionFilterAccess().getCommaKeyword_1_1_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectionFilter__Group_1_1_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionFilterAccess().getIndicesAssignment_1_1_0_3_1()); }
	(rule__ProjectionFilter__IndicesAssignment_1_1_0_3_1)
	{ after(grammarAccess.getProjectionFilterAccess().getIndicesAssignment_1_1_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectionFilter__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectionFilter__Group_1_1_1__0__Impl
	rule__ProjectionFilter__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionFilterAccess().getFilterOpAction_1_1_1_0()); }
	()
	{ after(grammarAccess.getProjectionFilterAccess().getFilterOpAction_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectionFilter__Group_1_1_1__1__Impl
	rule__ProjectionFilter__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionFilterAccess().getLeftSquareBracketKeyword_1_1_1_1()); }
	'['
	{ after(grammarAccess.getProjectionFilterAccess().getLeftSquareBracketKeyword_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectionFilter__Group_1_1_1__2__Impl
	rule__ProjectionFilter__Group_1_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionFilterAccess().getExternalAssignment_1_1_1_2()); }
	(rule__ProjectionFilter__ExternalAssignment_1_1_1_2)
	{ after(grammarAccess.getProjectionFilterAccess().getExternalAssignment_1_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectionFilter__Group_1_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__Group_1_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionFilterAccess().getRightSquareBracketKeyword_1_1_1_3()); }
	']'
	{ after(grammarAccess.getProjectionFilterAccess().getRightSquareBracketKeyword_1_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntValue__Group__0__Impl
	rule__IntValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntValueAccess().getIntValueAction_0()); }
	()
	{ after(grammarAccess.getIntValueAccess().getIntValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntValueAccess().getValueAssignment_1()); }
	(rule__IntValue__ValueAssignment_1)
	{ after(grammarAccess.getIntValueAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group__0__Impl
	rule__Set__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getSetAction_0()); }
	()
	{ after(grammarAccess.getSetAccess().getSetAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group__1__Impl
	rule__Set__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSetAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group__2__Impl
	rule__Set__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getGroup_2()); }
	(rule__Set__Group_2__0)?
	{ after(grammarAccess.getSetAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getSetAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group_2__0__Impl
	rule__Set__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getValuesAssignment_2_0()); }
	(rule__Set__ValuesAssignment_2_0)
	{ after(grammarAccess.getSetAccess().getValuesAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getGroup_2_1()); }
	(rule__Set__Group_2_1__0)*
	{ after(grammarAccess.getSetAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group_2_1__0__Impl
	rule__Set__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getSetAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Set__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetAccess().getValuesAssignment_2_1_1()); }
	(rule__Set__ValuesAssignment_2_1_1)
	{ after(grammarAccess.getSetAccess().getValuesAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group__0__Impl
	rule__Tuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getTupleAction_0()); }
	()
	{ after(grammarAccess.getTupleAccess().getTupleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group__1__Impl
	rule__Tuple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getTupleAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group__2__Impl
	rule__Tuple__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getValuesAssignment_2()); }
	(rule__Tuple__ValuesAssignment_2)
	{ after(grammarAccess.getTupleAccess().getValuesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group__3__Impl
	rule__Tuple__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getGroup_3()); }
	(rule__Tuple__Group_3__0)*
	{ after(grammarAccess.getTupleAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getTupleAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group_3__0__Impl
	rule__Tuple__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getTupleAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tuple__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleAccess().getValuesAssignment_3_1()); }
	(rule__Tuple__ValuesAssignment_3_1)*
	{ after(grammarAccess.getTupleAccess().getValuesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parenthesis__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__0__Impl
	rule__Parenthesis__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getParenthesisAction_0()); }
	()
	{ after(grammarAccess.getParenthesisAccess().getParenthesisAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__1__Impl
	rule__Parenthesis__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__2__Impl
	rule__Parenthesis__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getExpAssignment_2()); }
	(rule__Parenthesis__ExpAssignment_2)
	{ after(grammarAccess.getParenthesisAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecordAccess__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordAccess__Group__0__Impl
	rule__RecordAccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccessAccess().getRecordAccessAction_0()); }
	()
	{ after(grammarAccess.getRecordAccessAccess().getRecordAccessAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordAccess__Group__1__Impl
	rule__RecordAccess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccessAccess().getExclamationMarkKeyword_1()); }
	'!'
	{ after(grammarAccess.getRecordAccessAccess().getExclamationMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordAccess__Group__2__Impl
	rule__RecordAccess__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccessAccess().getRecordAssignment_2()); }
	(rule__RecordAccess__RecordAssignment_2)
	{ after(grammarAccess.getRecordAccessAccess().getRecordAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordAccess__Group__3__Impl
	rule__RecordAccess__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccessAccess().getGroup_3()); }
	(rule__RecordAccess__Group_3__0)?
	{ after(grammarAccess.getRecordAccessAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordAccess__Group__4__Impl
	rule__RecordAccess__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccessAccess().getHyphenMinusGreaterThanSignKeyword_4()); }
	'->'
	{ after(grammarAccess.getRecordAccessAccess().getHyphenMinusGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordAccess__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccessAccess().getMemberAssignment_5()); }
	(rule__RecordAccess__MemberAssignment_5)
	{ after(grammarAccess.getRecordAccessAccess().getMemberAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecordAccess__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordAccess__Group_3__0__Impl
	rule__RecordAccess__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccessAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getRecordAccessAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordAccess__Group_3__1__Impl
	rule__RecordAccess__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccessAccess().getParametersAssignment_3_1()); }
	(rule__RecordAccess__ParametersAssignment_3_1)
	{ after(grammarAccess.getRecordAccessAccess().getParametersAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordAccess__Group_3__2__Impl
	rule__RecordAccess__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccessAccess().getGroup_3_2()); }
	(rule__RecordAccess__Group_3_2__0)*
	{ after(grammarAccess.getRecordAccessAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordAccess__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccessAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getRecordAccessAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecordAccess__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordAccess__Group_3_2__0__Impl
	rule__RecordAccess__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccessAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getRecordAccessAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordAccess__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordAccessAccess().getParametersAssignment_3_2_1()); }
	(rule__RecordAccess__ParametersAssignment_3_2_1)
	{ after(grammarAccess.getRecordAccessAccess().getParametersAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ExternalDefsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getExternalDefsExternalDefParserRuleCall_2_0()); }
		ruleExternalDef
		{ after(grammarAccess.getProgramAccess().getExternalDefsExternalDefParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__RecordsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getRecordsRecordParserRuleCall_3_0()); }
		ruleRecord
		{ after(grammarAccess.getProgramAccess().getRecordsRecordParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ComputesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getComputesComputeParserRuleCall_4_0()); }
		ruleCompute
		{ after(grammarAccess.getProgramAccess().getComputesComputeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExternalDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalDefAccess().getTypeTypeParserRuleCall_3_0()); }
		ruleType
		{ after(grammarAccess.getExternalDefAccess().getTypeTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRecordAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__ParentAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordAccess().getParentRecordCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getRecordAccess().getParentRecordIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRecordAccess().getParentRecordIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getRecordAccess().getParentRecordCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__ParametersAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordAccess().getParametersParameterParserRuleCall_3_1_0()); }
		ruleParameter
		{ after(grammarAccess.getRecordAccess().getParametersParameterParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__ParametersAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordAccess().getParametersParameterParserRuleCall_3_2_1_0()); }
		ruleParameter
		{ after(grammarAccess.getRecordAccess().getParametersParameterParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__MembersAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordAccess().getMembersMemberParserRuleCall_5_0()); }
		ruleMember
		{ after(grammarAccess.getRecordAccess().getMembersMemberParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getMemberAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getExpUnionIntersectionParserRuleCall_2_0()); }
		ruleUnionIntersection
		{ after(grammarAccess.getMemberAccess().getExpUnionIntersectionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compute__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComputeAccess().getExpUnionIntersectionParserRuleCall_1_0()); }
		ruleUnionIntersection
		{ after(grammarAccess.getComputeAccess().getExpUnionIntersectionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionIntersection__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnionIntersectionAccess().getRightProductParserRuleCall_1_1_0()); }
		ruleProduct
		{ after(grammarAccess.getUnionIntersectionAccess().getRightProductParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductAccess().getRightProjectionFilterParserRuleCall_1_1_0()); }
		ruleProjectionFilter
		{ after(grammarAccess.getProductAccess().getRightProjectionFilterParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__IndicesAssignment_1_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectionFilterAccess().getIndicesINTTerminalRuleCall_1_1_0_2_0()); }
		RULE_INT
		{ after(grammarAccess.getProjectionFilterAccess().getIndicesINTTerminalRuleCall_1_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__IndicesAssignment_1_1_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectionFilterAccess().getIndicesINTTerminalRuleCall_1_1_0_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getProjectionFilterAccess().getIndicesINTTerminalRuleCall_1_1_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectionFilter__ExternalAssignment_1_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectionFilterAccess().getExternalExternalDefCrossReference_1_1_1_2_0()); }
		(
			{ before(grammarAccess.getProjectionFilterAccess().getExternalExternalDefIDTerminalRuleCall_1_1_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProjectionFilterAccess().getExternalExternalDefIDTerminalRuleCall_1_1_1_2_0_1()); }
		)
		{ after(grammarAccess.getProjectionFilterAccess().getExternalExternalDefCrossReference_1_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefAccess().getRefBindingCrossReference_0()); }
		(
			{ before(grammarAccess.getRefAccess().getRefBindingIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRefAccess().getRefBindingIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getRefAccess().getRefBindingCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__ValuesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetAccess().getValuesUnionIntersectionParserRuleCall_2_0_0()); }
		ruleUnionIntersection
		{ after(grammarAccess.getSetAccess().getValuesUnionIntersectionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__ValuesAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetAccess().getValuesUnionIntersectionParserRuleCall_2_1_1_0()); }
		ruleUnionIntersection
		{ after(grammarAccess.getSetAccess().getValuesUnionIntersectionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__ValuesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleAccess().getValuesUnionIntersectionParserRuleCall_2_0()); }
		ruleUnionIntersection
		{ after(grammarAccess.getTupleAccess().getValuesUnionIntersectionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__ValuesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleAccess().getValuesUnionIntersectionParserRuleCall_3_1_0()); }
		ruleUnionIntersection
		{ after(grammarAccess.getTupleAccess().getValuesUnionIntersectionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParenthesisAccess().getExpUnionIntersectionParserRuleCall_2_0()); }
		ruleUnionIntersection
		{ after(grammarAccess.getParenthesisAccess().getExpUnionIntersectionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__RecordAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordAccessAccess().getRecordRecordCrossReference_2_0()); }
		(
			{ before(grammarAccess.getRecordAccessAccess().getRecordRecordIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRecordAccessAccess().getRecordRecordIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getRecordAccessAccess().getRecordRecordCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__ParametersAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordAccessAccess().getParametersUnionIntersectionParserRuleCall_3_1_0()); }
		ruleUnionIntersection
		{ after(grammarAccess.getRecordAccessAccess().getParametersUnionIntersectionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__ParametersAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordAccessAccess().getParametersUnionIntersectionParserRuleCall_3_2_1_0()); }
		ruleUnionIntersection
		{ after(grammarAccess.getRecordAccessAccess().getParametersUnionIntersectionParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordAccess__MemberAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordAccessAccess().getMemberMemberCrossReference_5_0()); }
		(
			{ before(grammarAccess.getRecordAccessAccess().getMemberMemberIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRecordAccessAccess().getMemberMemberIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getRecordAccessAccess().getMemberMemberCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
