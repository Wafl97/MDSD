program P6CompleteProgram
external isEven(Int)
external areSequential(Tuple)

record r1(a: Set(Int)) {
	b: {1,2,3}
	even: a#[isEven]
}

record r2: r1 {
	union: even U b 
	inter: even & b 
}

record r3: r2 (p: Int, q:Int) {
	prod: union*inter }

record r4: r2 (s: Set(Tuple), h: Int, j: Tuple) {
	filter: s#[areSequential]
	tupleOp: {j, [6,3], [6,4]} & {2,h} * b
}

compute !r1({2,3,4})->even
compute !r2({2,3,4})->union
compute !r2({2,3,4})->inter
compute !r3({2,3,4}, 1, 3)->prod
compute !r4({},{[1,2], [4,5], [7,8], [10,15], [5, 3]}, 6,[13,16,10])->filter 
compute !r4({},{}, 6,[2,1])->tupleOp
